import Color from "colorjs.io"
import fs from "fs/promises"
import path from "path"
import light from "../colors/light.json"

const outputDirectory = path.resolve(process.cwd(), "src")

type ColorMaps = Record<string, Record<string, string>>

const p3Colors: ColorMaps = {}
const sRgbColors: ColorMaps = {}

Object.entries(light).forEach(([name, value]) => {
  const p3Name = `${name}P3`

  p3Colors[p3Name] = {}
  sRgbColors[name] = {}

  Object.entries(value).forEach(([key, color]) => {
    sRgbColors[name][key] = color
    p3Colors[p3Name][key] = new Color(color).to("p3").toString({ precision: 3 })
  })
})

const output = [sRgbColors, p3Colors]

let fileContent = `/** Do not edit. This file is generated by the command pnpm build:ts-modules **/\n`

for (const colors of output) {
  Object.entries(colors).forEach(([name, value]) => {
    const formattedValue = Object.entries(value)
      .map(([key, color]) => `  ${key}: "${color}"`)
      .join(",\n")

    fileContent = `${fileContent}\nexport const ${name} = {\n${formattedValue}\n}\n`
  })
}

await fs.writeFile(path.resolve(outputDirectory, "colors.ts"), fileContent)
